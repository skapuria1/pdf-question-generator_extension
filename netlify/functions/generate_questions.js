const fetch = require('node-fetch');

exports.handler = async (event, context) => {
    // Add CORS headers to the response
    const headers = {
        'Access-Control-Allow-Origin': '*', // Allow all origins for testing, restrict to specific origin in production
        'Access-Control-Allow-Headers': 'Content-Type',
        'Access-Control-Allow-Methods': 'POST, GET, OPTIONS'
    };

    // Handle preflight requests
    if (event.httpMethod === 'OPTIONS') {
        return {
            statusCode: 200,
            headers,
            body: ''
        };
    }

    // Parse the request body to get the PDF text
    const { pdfText } = JSON.parse(event.body);
    const apiKey = process.env.GPT4_MINI_API_KEY;

    try {
        // Call the GPT-4 Mini API
        const response = await fetch('https://api.gpt4mini.com/v1/generate', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${apiKey}`
            },
            body: JSON.stringify({
                prompt: `Generate multiple choice questions from this text: ${pdfText}`,
                max_tokens: 500
            })
        });

        if (!response.ok) {
            throw new Error('Error with GPT-4 Mini API request');
        }

        const data = await response.json();

        // Return the questions generated by the GPT-4 Mini API
        return {
            statusCode: 200,
            headers, // Include CORS headers in the response
            body: JSON.stringify({ questions: data.choices[0].text.trim() })
        };
    } catch (error) {
        return {
            statusCode: 500,
            headers, // Include CORS headers in the error response
            body: JSON.stringify({ error: error.message })
        };
    }
};
